networks:
  home:

services:

  # Dashboard
  organizr:
    image: organizr/organizr
    container_name: organizr
    hostname: organizr
    depends_on:
      - bazarr
      - calibre
      - calibre-web
      - ombi
      - prowlarr
      - radarr
      - sonarr
      - transmission
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
    environment:
      PUID: "${PUID_ALT}"
      PGID: "${PGID_ALT}"
      TZ: "${TIMEZONE}"
    ports:
      - "80:80"
    restart: unless-stopped
    volumes:
      # Persistent volumes
      - organizr_content:/config

  # Movie searcher
  radarr:
    image: linuxserver/radarr:4.0.5
    container_name: radarr
    hostname: radarr
    depends_on:
      - transmission
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1024M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "7878:7878"
    restart: unless-stopped
    volumes:
      # Volume mounts from host system
      - "${DOWNLOADS_DIRECTORY}:/downloads"
      - "${MOVIE_DIRECTORY}:/movies"
      # Persistent volumes
      - radarr_backups:/config/Backups
      - radarr_content:/config

  # TV show searcher
  sonarr:
    image: linuxserver/sonarr:3.0.7
    container_name: sonarr
    hostname: sonarr
    depends_on:
      - transmission
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "2048M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "8989:8989"
    restart: unless-stopped
    volumes:
      # Volume mounts from host system
      - "${DOWNLOADS_DIRECTORY}:/downloads"
      - "${TV1_DIRECTORY}:/tv1"
      - "${TV2_DIRECTORY}:/tv2"
      # Persistent volumes
      - sonarr_backups:/config/Backups
      - sonarr_content:/config

  # Book searcher
#  readarr:
#    image: linuxserver/readarr:0.1.0-develop
#    container_name: readarr
#    hostname: readarr
#    depends_on:
#      - calibre
#      - transmission
#    deploy:
#      resources:
#        limits:
#          cpus: "0.1"
#          memory: "512M"
#    environment:
#      PUID: "${PUID}"
#      PGID: "${PGID}"
#      TZ: "${TIMEZONE}"
#    networks:
#      - home
#    ports:
#      - "8787:8787"
#    restart: unless-stopped
#    volumes:
#      # Volume mounts from host system
#      - "${BOOKS_DIRECTORY}:/books"
#      - "${DOWNLOADS_DIRECTORY}:/downloads"
#      # Persistent volumes
#      - calibre_content:/calibre_config
#      - readarr_backups:/config/Backups
#      - readarr_content:/config

  # eBook management
  calibre:
    image: linuxserver/calibre
    container_name: calibre
    hostname: calibre
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "1024M"
    environment:
      GUAC_USER: "abc" # Hardcoded value
      GUAC_PASS : "${ADMIN_PASSWORD}"
      USERNAME: "abc" # Hardcoded value
      PASSWORD: "${ADMIN_PASSWORD}"
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "8080:8080"
      - "8081:8081"
    restart: unless-stopped
    volumes:
      # Persistent volumes
      - calibre_content:/config
      - "calibre_library_1:/${BOOK_LIBRARY_1}"
      - "calibre_library_2:/${BOOK_LIBRARY_2}"

  # Default credentials: admin/admin123
  calibre-web-1:
    image: linuxserver/calibre-web
    container_name: calibre-web-1
    hostname: calibre-web-1
    depends_on:
      - calibre
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "256M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "8083:8083"
    restart: unless-stopped
    volumes:
      # Persistent volumes
      - "calibre_library_1:/${BOOK_LIBRARY_1}"
      - calibre-web-1_content:/config

  # Default credentials: admin/admin123
  calibre-web-2:
    image: linuxserver/calibre-web
    container_name: calibre-web-2
    hostname: calibre-web-2
    depends_on:
      - calibre
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "256M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "8084:8083"
    restart: unless-stopped
    volumes:
      # Persistent volumes
      - "calibre_library_2:/${BOOK_LIBRARY_2}"
      - calibre-web-2_content:/config

  # Subtitle downloader
  bazarr:
    image: linuxserver/bazarr:1.0.3
    container_name: bazarr
    hostname: bazarr
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "256M"
    depends_on:
      - radarr
      - sonarr
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "6767:6767"
    restart: unless-stopped
    volumes:
      # Volume mounts from host system
      - "${MOVIE_DIRECTORY}:/movies"
      - "${TV1_DIRECTORY}:/tv1"
      - "${TV2_DIRECTORY}:/tv2"
      # Persistent volumes
      - bazarr_backups:/config/backup
      - bazarr_content:/config

  # Indexer (Torrents + Usenet)
  prowlarr:
    image: linuxserver/prowlarr:0.3.0-nightly
    container_name: prowlarr
    hostname: prowlarr
    depends_on:
      - flaresolverr
      - radarr
      - sonarr
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "512M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "9696:9696"
    restart: unless-stopped
    volumes:
      # Persistent volumes
      - prowlarr_backups:/config/Backups
      - prowlarr_content:/config

  # Torrent downloader
  transmission:
    build:
      context: .
      dockerfile: docker/transmission/Dockerfile
      args:
        # Docker image versions
        TRANSMISSION_VERSION: "version-3.00-r5"
    container_name: transmission
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "256M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
      USER: "${ADMIN_USERNAME}"
      PASS: "${ADMIN_PASSWORD}"
    networks:
      - home
    ports:
      - "9091:9091"
      - "5555:51413"
      - "5555:51413/udp"
    restart: unless-stopped
    volumes:
      # Volume mounts from host system
      - "${DOWNLOADS_DIRECTORY}:/downloads"
      - "${WATCH_DIRECTORY_FOR_TORRENT_FILES}:/watch"
      # Persistent volumes
      - transmission_content:/config

  # Cloudflare rate-limiter solver
  flaresolverr:
    image: flaresolverr/flaresolverr:v2.2.2
    container_name: flaresolverr
    hostname: flaresolverr
    deploy:
      resources:
        limits:
          cpus: "0.025"
          memory: "128M"
    environment:
      LOG_LEVEL: info
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "8191:8191"
    restart: unless-stopped

  # "Emby user"-connected frontend to request new content
  ombi:
#    # Configuration for mariadb
#    build:
#      context: .
#      dockerfile: docker/ombi/Dockerfile
#      args:
#        # Docker image versions
#        OMBI_VERSION: "4.16.12"
#        # Build arguments
#        DB_NAME: "${DB_NAME}"
#        DB_USERNAME: "${DB_USERNAME}"
#        DB_PASSWORD: "${DB_PASSWORD}"
    image: linuxserver/ombi:4.16.12
    container_name: ombi
    hostname: ombi
    depends_on:
      - radarr
      - sonarr
#      - mariadb
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "512M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "3579:3579"
    restart: unless-stopped
    volumes:
      # Persistent volumes
      - ombi_content:/config

#  # Main family media server
#  emby:
#    build:
#      context: .
#      dockerfile: docker/emby/Dockerfile
#      args:
#        # Docker image versions
#        EMBY_VERSION: "4.6.7"
#    container_name: emby
#    hostname: emby
#    deploy:
#      resources:
#        limits:
#          # cpus: "8" No CPU limit
#          memory: "1024M"
#    environment:
#      DISCORD_ONLINE_WEBHOOK_URL: "${DISCORD_ONLINE_WEBHOOK_URL}"
#      DISCORD_OFFLINE_WEBHOOK_URL: "${DISCORD_OFFLINE_WEBHOOK_URL}"
#      PUID: "${PUID}"
#      PGID: "${PGID}"
#      TZ: "${TIMEZONE}"
#    networks:
#      - home
#    ports:
#      - "8096:8096"
#    restart: unless-stopped
#    volumes:
#      # Volume mounts from host system
#      - "${MOVIE_DIRECTORY}:/data/movies"
#      - "${MUSIC_DIRECTORY}:/data/music"
#      - "${TV1_DIRECTORY}:/data/tv1"
#      - "${TV2_DIRECTORY}:/data/tv2"
#      # Persistent volumes
#      - emby_backups:/backups
#      - emby_content:/config
#
#  # Home media server for PS5
#  plex:
#    build:
#      context: .
#      dockerfile: docker/plex/Dockerfile
#      args:
#        # Docker image versions
#        PLEX_VERSION: "1.25.9"
#    container_name: plex
#    hostname: plex
#    deploy:
#      resources:
#        limits:
#          cpus: "4"
#          memory: "2048M"
#    environment:
#      PUID: "${PUID}"
#      PGID: "${PGID}"
#      TZ: "${TIMEZONE}"
#    networks:
#      - home
#    ports:
#      - "32400:32400"
#    restart: unless-stopped
#    volumes:
#      # Volume mounts from host system
#      - "${MOVIE_DIRECTORY}:/movies"
#      - "${TV1_DIRECTORY}:/tv1"
#      - "${TV2_DIRECTORY}:/tv2"
#      # Persistent volumes
#      - plex_backups:/backups
#      - plex_content:/config

# Unused for now, may be needed for Ombi in the future, maybe Piwigo
#  mariadb:
#    build:
#      context: .
#      dockerfile: docker/mariadb/Dockerfile
#      args:
#        # Docker image versions
#        MARIADB_VERSION: "10.5.15-alpine"
#    container_name: mariadb
#    hostname: mariadb
#    deploy:
#      resources:
#        limits:
#          cpus: "1"
#          memory: "2048M"
#    environment:
#      PUID: "${PUID}"
#      PGID: "${PGID}"
#      TZ: "${TIMEZONE}"
#      MYSQL_ROOT_PASSWORD: "${ADMIN_PASSWORD}"
#      MYSQL_DATABASE: "${DB_NAME}"
#      MYSQL_USER: "${DB_USERNAME}"
#      MYSQL_PASSWORD: "${DB_PASSWORD}"
#    networks:
#      - home
#    ports:
#      - "3306:3306"
#    restart: unless-stopped
#    volumes:
#      - mariadb_content:/config

volumes:
  # *.arr Backups
  bazarr_backups: {}
  prowlarr_backups: {}
  radarr_backups: {}
  sonarr_backups: {}
  # *.arr Content
  bazarr_content: {}
  calibre_content: {}
  calibre-web-1_content: {}
  calibre-web-2_content: {}
  ombi_content: {}
  organizr_content: {}
  prowlarr_content: {}
  radarr_content: {}
  sonarr_content: {}
  transmission_content: {}
  # Calibre libraries for multiple users
  calibre_library_1: {}
  calibre_library_2: {}
