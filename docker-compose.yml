networks:
  home:

services:

  # Dashboard
  heimdall:
    image: linuxserver/heimdall:2.4.10
    container_name: heimdall
    hostname: heimdall
    depends_on:
      - radarr
      - sonarr
#      - readarr
      - emby
      - plex
      - transmission
      - prowlarr
#      - calibre
      - bazarr
      - ombi
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    ports:
      - "80:80"
    networks:
      - home
    restart: unless-stopped
    volumes:
      - "${STORAGE_DIRECTORY}/heimdall:/config"

  # Movie searcher
  radarr:
    image: linuxserver/radarr:4.0.5
    container_name: radarr
    hostname: radarr
    depends_on:
      - transmission
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    ports:
      - "7878:7878"
    networks:
      - home
    restart: unless-stopped
    volumes:
      # Volume mounts from host system
      - "${STORAGE_DIRECTORY}/radarr:/config"
      - "${DOWNLOADS_DIRECTORY}:/downloads"
      - "${MOVIE_DIRECTORY}:/movies"
      # Persistent volumes
      - "radarr_backups:/config/Backups"

  # TV show searcher
  sonarr:
    image: linuxserver/sonarr:3.0.7
    container_name: sonarr
    hostname: sonarr
    depends_on:
      - transmission
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    ports:
      - "8989:8989"
    networks:
      - home
    restart: unless-stopped
    volumes:
      # Volume mounts from host system
      - "${STORAGE_DIRECTORY}/sonarr:/config"
      - "${DOWNLOADS_DIRECTORY}:/downloads"
      - "${TV1_DIRECTORY}:/tv1"
      - "${TV2_DIRECTORY}:/tv2"
      # Persistent volumes
      - "sonarr_backups:/config/Backups"

#  # Book searcher
#  readarr:
#    image: linuxserver/readarr:0.1.0-develop
#    container_name: readarr
#    hostname: readarr
#    depends_on:
##      - calibre
#      - transmission
#    environment:
#      PUID: "${PUID}"
#      PGID: "${PGID}"
#      TZ: "${TIMEZONE}"
#    ports:
#      - "8787:8787"
#    networks:
#      - home
#    restart: unless-stopped
#    volumes:
#      # Volume mounts from host system
#      - "${STORAGE_DIRECTORY}/readarr:/config"
#      - "${BOOKS_DIRECTORY}:/books"
#      - "${DOWNLOADS_DIRECTORY}:/downloads"
#      # Persistent volumes
#      - "readarr_backups:/config/Backups"
#
#  # eBook management
#  calibre:
#    image: linuxserver/calibre:5.40.0
#    container_name: calibre
#    hostname: calibre
#    environment:
#      PUID: "${PUID}"
#      PGID: "${PGID}"
#      TZ: "${TIMEZONE}"
#      USERNAME: "abc" # Pre-defined
#      PASSWORD: "${ADMIN_PASSWORD}"
#      CLI_ARGS: "â€“auth-mode=basic"
#    ports:
#      - "8080:8080"
#      - "8081:8081"
#    networks:
#      - home
#    restart: unless-stopped
#    volumes:
#      - "${STORAGE_DIRECTORY}/calibre:/config"

  # Subtitle downloader
  bazarr:
    image: linuxserver/bazarr:1.0.3
    container_name: bazarr
    hostname: bazarr
    depends_on:
      - radarr
      - sonarr
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    ports:
      - "6767:6767"
    networks:
      - home
    restart: unless-stopped
    volumes:
      # Volume mounts from host system
      - "${STORAGE_DIRECTORY}/bazarr:/config"
      - "${MOVIE_DIRECTORY}:/movies"
      - "${TV1_DIRECTORY}:/tv1"
      - "${TV2_DIRECTORY}:/tv2"
      # Persistent volumes
      - "bazarr_backups:/config/backup"

  # Indexer (Torrents + Usenet)
  prowlarr:
    image: linuxserver/prowlarr:0.3.0-nightly
    container_name: prowlarr
    hostname: prowlarr
    depends_on:
      - flaresolverr
      - radarr
#      - readarr
      - sonarr
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    ports:
      - "9696:9696"
    networks:
      - home
    restart: unless-stopped
    volumes:
      # Volume mounts from host system
      - "${STORAGE_DIRECTORY}/prowlarr:/config"
      # Persistent volumes
      - "prowlarr_backups:/config/Backups"

  # Torrent downloader
  transmission:
    build:
      context: .
      dockerfile: docker/transmission/Dockerfile
      args:
        # Docker image versions
        TRANSMISSION_VERSION: "version-3.00-r5"
    container_name: transmission
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
      USER: "${ADMIN_USERNAME}"
      PASS: "${ADMIN_PASSWORD}"
    ports:
      - "9091:9091"
      - "5555:51413"
      - "5555:51413/udp"
    networks:
      - home
    restart: unless-stopped
    volumes:
      - "${STORAGE_DIRECTORY}/transmission:/config"
      - "${DOWNLOADS_DIRECTORY}:/downloads"
      - "${WATCH_DIRECTORY_FOR_TORRENT_FILES}:/watch"

  # Cloudflare rate-limiter solver
  flaresolverr:
    image: flaresolverr/flaresolverr:v2.2.2
    container_name: flaresolverr
    hostname: flaresolverr
    environment:
      LOG_LEVEL: info
      TZ: "${TIMEZONE}"
    ports:
      - "8191:8191"
    networks:
      - home
    restart: unless-stopped

  # "Emby user"-connected frontend to request new content
  ombi:
#    # Configuration for mariadb
#    build:
#      context: .
#      dockerfile: docker/ombi/Dockerfile
#      args:
#        # Docker image versions
#        OMBI_VERSION: "4.16.12"
#        # Build arguments
#        DB_NAME: "${DB_NAME}"
#        DB_USERNAME: "${DB_USERNAME}"
#        DB_PASSWORD: "${DB_PASSWORD}"
    image: linuxserver/ombi:4.16.12
    container_name: ombi
    hostname: ombi
    depends_on:
      - emby
      - radarr
#      - readarr
      - sonarr
#      - mariadb
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    ports:
      - "3579:3579"
    networks:
      - home
    restart: unless-stopped
    volumes:
      - "${STORAGE_DIRECTORY}/ombi:/config"

  # Main family media server
  emby:
    build:
      context: .
      dockerfile: docker/emby/Dockerfile
      args:
        # Docker image versions
        EMBY_VERSION: "4.6.7"
    container_name: emby
    hostname: emby
    environment:
      DISCORD_ONLINE_WEBHOOK_URL: "${DISCORD_ONLINE_WEBHOOK_URL}"
      DISCORD_OFFLINE_WEBHOOK_URL: "${DISCORD_OFFLINE_WEBHOOK_URL}"
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    ports:
      - "8096:8096"
    networks:
      - home
    restart: unless-stopped
    volumes:
      - "${STORAGE_DIRECTORY}/emby:/config"
      - "${MOVIE_DIRECTORY}:/data/movies"
      - "${TV1_DIRECTORY}:/data/tv1"
      - "${TV2_DIRECTORY}:/data/tv2"

  # Home media server for PS5
  plex:
    image: linuxserver/plex:1.25.9
    container_name: plex
    hostname: plex
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    ports:
      - "32400:32400"
    networks:
      - home
    restart: unless-stopped
    volumes:
      - "${STORAGE_DIRECTORY}/plex:/config"
      - "${MOVIE_DIRECTORY}:/movies"
      - "${TV1_DIRECTORY}:/tv1"
      - "${TV2_DIRECTORY}:/tv2"

# Unused for now, may be needed for Ombi in the future, maybe Piwigo
#  mariadb:
#    build:
#      context: .
#      dockerfile: docker/mariadb/Dockerfile
#      args:
#        # Docker image versions
#        MARIADB_VERSION: "10.5.15-alpine"
#    container_name: mariadb
#    hostname: mariadb
#    environment:
#      PUID: "${PUID}"
#      PGID: "${PGID}"
#      TZ: "${TIMEZONE}"
#      MYSQL_ROOT_PASSWORD: "${ADMIN_PASSWORD}"
#      MYSQL_DATABASE: "${DB_NAME}"
#      MYSQL_USER: "${DB_USERNAME}"
#      MYSQL_PASSWORD: "${DB_PASSWORD}"
#    ports:
#      - "3306:3306"
#    networks:
#      - home
#    restart: unless-stopped
#    volumes:
#      - "${STORAGE_DIRECTORY}/mariadb:/config"

volumes:
  radarr_backups: {}
  sonarr_backups: {}
  bazarr_backups: {}
  readarr_backups: {}
  prowlarr_backups: {}
