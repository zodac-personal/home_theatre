networks:
  home:

services:

  # Movie searcher
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    hostname: radarr
    depends_on:
      - transmission
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1024M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "7878:7878"
    restart: unless-stopped
    volumes:
      # Volume mounts from host system
      - "${DOWNLOADS_DIRECTORY}:/downloads"
      - "${MOVIE_DIRECTORY}:/movies"
      # Persistent volumes
      - radarr_backups:/config/Backups
      - radarr_content:/config

  # TV show searcher
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    hostname: sonarr
    depends_on:
      - transmission
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "2048M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "8989:8989"
    restart: unless-stopped
    volumes:
      # Volume mounts from host system
      - "${DOWNLOADS_DIRECTORY}:/downloads"
      - "${TV1_DIRECTORY}:/tv1"
      - "${TV2_DIRECTORY}:/tv2"
      - "${TV3_DIRECTORY}:/tv3"
      # Persistent volumes
      - sonarr_backups:/config/Backups
      - sonarr_content:/config

  # Music searcher
  lidarr:
    image: linuxserver/lidarr:latest
    container_name: lidarr
    hostname: lidarr
    depends_on:
      - transmission
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1024M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "8686:8686"
    restart: unless-stopped
    volumes:
      # Volume mounts from host system
      - "${DOWNLOADS_DIRECTORY}:/downloads"
      - "${MUSIC_DIRECTORY}:/music"
      # Persistent volumes
      - lidarr_backups:/config/Backups
      - lidarr_content:/config

  # Music Player
  airsonic:
    image: linuxserver/airsonic-advanced:latest
    container_name: airsonic
    hostname: airsonic
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1024M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "4040:4040"
    restart: unless-stopped
    volumes:
      # Volume mounts from host system
      - "${MUSIC_DIRECTORY}:/music"
      - "${PLAYLIST_DIRECTORY}:/playlists"
      # - "${PODCAST_DIRECTORY}:/podcasts"
      # Persistent volumes
      - airsonic_backups:/config/backups
      - airsonic_content:/config

  # Book searcher
  #  readarr:
  #    image: linuxserver/readarr:0.1.0-develop
  #    container_name: readarr
  #    hostname: readarr
  #    depends_on:
  #      - calibre
  #      - transmission
  #    deploy:
  #      resources:
  #        limits:
  #          cpus: "0.1"
  #          memory: "512M"
  #    environment:
  #      PUID: "${PUID}"
  #      PGID: "${PGID}"
  #      TZ: "${TIMEZONE}"
  #    networks:
  #      - home
  #    ports:
  #      - "8787:8787"
  #    restart: unless-stopped
  #    volumes:
  #      # Volume mounts from host system
  #      - "${BOOKS_DIRECTORY}:/books"
  #      - "${DOWNLOADS_DIRECTORY}:/downloads"
  #      # Persistent volumes
  #      - calibre_content:/calibre_config
  #      - readarr_backups:/config/Backups
  #      - readarr_content:/config

  # eBook management
  calibre:
    image: linuxserver/calibre:latest
    container_name: calibre
    hostname: calibre
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "1024M"
    environment:
      GUAC_USER: "abc" # Hardcoded value
      GUAC_PASS : "${ADMIN_PASSWORD}"
      USERNAME: "abc" # Hardcoded value
      PASSWORD: "${ADMIN_PASSWORD}"
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "8080:8080"
      - "8081:8081"
    restart: unless-stopped
    volumes:
      # Volume mounts from host system
      - "${BOOK_COVERS_DIRECTORY}:/covers"
      # Persistent volumes
      - calibre_content:/config
      - "calibre_library_1:/${BOOK_LIBRARY_1}"
      - "calibre_library_2:/${BOOK_LIBRARY_2}"

  # Default credentials: admin/admin123
  calibre-web-1:
    image: linuxserver/calibre-web:latest
    container_name: calibre-web-1
    hostname: calibre-web-1
    depends_on:
      - calibre
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "256M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "8083:8083"
    restart: unless-stopped
    volumes:
      # Persistent volumes
      - "calibre_library_1:/${BOOK_LIBRARY_1}"
      - calibre-web-1_content:/config

  # Default credentials: admin/admin123
  calibre-web-2:
    image: linuxserver/calibre-web:latest
    container_name: calibre-web-2
    hostname: calibre-web-2
    depends_on:
      - calibre
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "256M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "8084:8083"
    restart: unless-stopped
    volumes:
      # Persistent volumes
      - "calibre_library_2:/${BOOK_LIBRARY_2}"
      - calibre-web-2_content:/config

  # Subtitle downloader
  bazarr:
    image: linuxserver/bazarr:latest
    container_name: bazarr
    hostname: bazarr
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "512M"
    depends_on:
      - radarr
      - sonarr
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "6767:6767"
    restart: unless-stopped
    volumes:
      # Volume mounts from host system
      - "${MOVIE_DIRECTORY}:/movies"
      - "${TV1_DIRECTORY}:/tv1"
      - "${TV2_DIRECTORY}:/tv2"
      - "${TV3_DIRECTORY}:/tv3"
      # Persistent volumes
      - bazarr_backups:/config/backup
      - bazarr_content:/config

  # Indexer (Torrents + Usenet)
  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    hostname: prowlarr
    depends_on:
      - flaresolverr
      - radarr
      - sonarr
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "512M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "9696:9696"
    restart: unless-stopped
    volumes:
      # Persistent volumes
      - prowlarr_backups:/config/Backups
      - prowlarr_content:/config

  # Torrent downloader
  transmission:
    build:
      context: .
      dockerfile: docker/transmission/Dockerfile
    container_name: transmission
    hostname: transmission
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "512M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
      USER: "${ADMIN_USERNAME}"
      PASS: "${ADMIN_PASSWORD}"
    networks:
      - home
    ports:
      - "9091:9091"
      - "5555:51413"
      - "5555:51413/udp"
    restart: unless-stopped
    volumes:
      # Volume mounts from host system
      - "${DOWNLOADS_DIRECTORY}:/downloads"
      - "${WATCH_DIRECTORY_FOR_TORRENT_FILES}:/watch"
      # Cannot user a docker volume for config, as it will be overwritten by the transmission daemon
      - "${PROJECT_DIRECTORY}/docker/transmission/storage:/config"

  # Discord bot for requests
  doplarr:
    image: linuxserver/doplarr:latest
    container_name: doplarr
    hostname: doplarr
    depends_on:
      - radarr
      - sonarr
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
    environment:
      # Integration configuration
      RADARR__URL: "http://radarr:7878"
      SONARR__URL: "http://sonarr:8989"
      RADARR__API: "${RADARR_API_KEY}"
      SONARR__API: "${SONARR_API_KEY}"
      # Discord configuration
      DISCORD__TOKEN: "${DISCORD_BOT_TOKEN}"
      DISCORD__MAX_RESULTS: 5
    networks:
      - home
    restart: unless-stopped

  # Cloudflare rate-limiter solver
  flaresolverr:
    image: ghcr.io/aeonlucid/flaresolverr:latest
    container_name: flaresolverr
    hostname: flaresolverr
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1024M"
    environment:
      LOG_LEVEL: info
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "8191:8191"
    restart: unless-stopped

volumes:
  # *.arr Backups
  airsonic_backups: { }
  bazarr_backups: { }
  lidarr_backups: { }
  prowlarr_backups: { }
  radarr_backups: { }
  sonarr_backups: { }
  # *.arr Content
  airsonic_content: { }
  bazarr_content: { }
  calibre_content: { }
  calibre-web-1_content: { }
  calibre-web-2_content: { }
  lidarr_content: { }
  prowlarr_content: { }
  radarr_content: { }
  sonarr_content: { }
  # Calibre libraries for multiple users
  calibre_library_1: { }
  calibre_library_2: { }
