networks:
  home:

services:

  # Movie searcher
  radarr:
    image: linuxserver/radarr:4.3.2
    container_name: radarr
    hostname: radarr
    depends_on:
      - qbittorrent
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1024M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "4000:3000"
    restart: unless-stopped
    volumes:
      # Volume mounts from host system
      - "${DOWNLOADS_DIRECTORY}:/downloads"
      - "${MOVIE_DIRECTORY}:/movies"
      # Persistent volumes
      - radarr_backups:/config/Backups
      - radarr_content:/config

  # TV show searcher
  sonarr:
    image: linuxserver/sonarr:4.0.0-develop
    container_name: sonarr
    hostname: sonarr
    depends_on:
      - qbittorrent
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "2048M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "4001:3001"
    restart: unless-stopped
    volumes:
      # Volume mounts from host system
      - "${DOWNLOADS_DIRECTORY}:/downloads"
      - "${TV1_DIRECTORY}:/tv1"
      - "${TV2_DIRECTORY}:/tv2"
      - "${TV3_DIRECTORY}:/tv3"
      # Persistent volumes
      - sonarr_backups:/config/Backups
      - sonarr_content:/config

  # Music searcher
  lidarr:
    image: linuxserver/lidarr:1.1.1-develop
    container_name: lidarr
    hostname: lidarr
    depends_on:
      - qbittorrent
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1024M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "4002:3002"
    restart: unless-stopped
    volumes:
      # Volume mounts from host system
      - "${DOWNLOADS_DIRECTORY}:/downloads"
      - "${MUSIC_DIRECTORY}:/music"
      # Persistent volumes
      - lidarr_backups:/config/Backups
      - lidarr_content:/config

  # Music Player
  airsonic:
    image: linuxserver/airsonic-advanced:11.0.0
    container_name: airsonic
    hostname: airsonic
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1024M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "4003:4040"
    restart: unless-stopped
    volumes:
      # Volume mounts from host system
      - "${MUSIC_DIRECTORY}:/music"
      - "${PLAYLIST_DIRECTORY}:/playlists"
      - "${PODCAST_DIRECTORY}:/podcasts"
      # Persistent volumes
      - airsonic_backups:/config/backups
      - airsonic_content:/config

  # Book searcher
  #  readarr:
  #    image: linuxserver/readarr:0.1.4-develop
  #    container_name: readarr
  #    hostname: readarr
  #    depends_on:
  #      - calibre
  #      - qbittorrent
  #    deploy:
  #      resources:
  #        limits:
  #          cpus: "0.1"
  #          memory: "512M"
  #    environment:
  #      PUID: "${PUID}"
  #      PGID: "${PGID}"
  #      TZ: "${TIMEZONE}"
  #    networks:
  #      - home
  #    ports:
  #      - "4004:8787"
  #    restart: unless-stopped
  #    volumes:
  #      # Volume mounts from host system
  #      - "${BOOKS_DIRECTORY}:/books"
  #      - "${DOWNLOADS_DIRECTORY}:/downloads"
  #      # Persistent volumes
  #      - calibre_content:/calibre_config
  #      - readarr_backups:/config/Backups
  #      - readarr_content:/config

  # eBook management
  calibre:
    image: linuxserver/calibre:6.13.0
    container_name: calibre
    hostname: calibre
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "1024M"
    environment:
      GUAC_USER: "abc" # Hardcoded value
      GUAC_PASS : "${CALIBRE_PASSWORD}"
      USERNAME: "abc" # Hardcoded value
      PASSWORD: "${CALIBRE_PASSWORD}"
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "4005:8080"
      - "4006:8081"
    restart: unless-stopped
    volumes:
      # Volume mounts from host system
      - "${BOOK_COVERS_DIRECTORY}:/covers"
      # Persistent volumes
      - calibre_content:/config
      - "calibre_library_1:/${BOOK_LIBRARY_1}"
      - "calibre_library_2:/${BOOK_LIBRARY_2}"

  # Default credentials: admin/admin123
  calibre-web-1:
    image: linuxserver/calibre-web:0.6.19
    container_name: calibre-web-1
    hostname: calibre-web-1
    depends_on:
      - calibre
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "256M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "4007:8083"
    restart: unless-stopped
    volumes:
      # Persistent volumes
      - "calibre_library_1:/${BOOK_LIBRARY_1}"
      - calibre-web-1_content:/config

  # Default credentials: admin/admin123
  calibre-web-2:
    image: linuxserver/calibre-web:0.6.19
    container_name: calibre-web-2
    hostname: calibre-web-2
    depends_on:
      - calibre
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "256M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "4008:8083"
    restart: unless-stopped
    volumes:
      # Persistent volumes
      - "calibre_library_2:/${BOOK_LIBRARY_2}"
      - calibre-web-2_content:/config

  # Downloaded archive extracter
  unpackerr:
    image: golift/unpackerr:0.11.1
    container_name: unpackerr
    hostname: unpackerr
    depends_on:
      - lidarr
      - radarr
      - sonarr
      # - readarr
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "512M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
      # Sonarr Config
      UN_SONARR_0_URL: "http://sonarr:3001"
      UN_SONARR_0_API_KEY: "${SONARR_API_KEY}"
      UN_SONARR_0_PATHS_0: "/downloads/complete/sonarr"
      UN_SONARR_0_PROTOCOLS: "torrent,usenet"
      # Radarr Config
      UN_RADARR_0_URL: "http://radarr:3000"
      UN_RADARR_0_API_KEY: "${RADARR_API_KEY}"
      UN_RADARR_0_PATHS_0: "/downloads/complete/radarr"
      UN_RADARR_0_PROTOCOLS: "torrent,usenet"
      # # Lidarr Config
      UN_LIDARR_0_URL: "http://lidarr:3002"
      UN_LIDARR_0_API_KEY: "${LIDARR_API_KEY}"
      UN_LIDARR_0_PATHS_0: "/downloads/complete/lidarr"
      UN_LIDARR_0_PROTOCOLS: "torrent,usenet"
      # # Readarr Config
      # UN_READARR_0_URL: "http://readarr:8787"
      # UN_READARR_0_API_KEY:
      # UN_READARR_0_PATHS_0:" /downloads/complete/readarr"
      # UN_READARR_0_PROTOCOLS: "torrent,usenet"
    networks:
      - home
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    user: "${PUID}:${PGID}"
    volumes:
      - "${DOWNLOADS_DIRECTORY}:/downloads"

  # Subtitle downloader
  bazarr:
    image: linuxserver/bazarr:1.1.4
    container_name: bazarr
    hostname: bazarr
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "512M"
    depends_on:
      - radarr
      - sonarr
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "4009:3009"
    restart: unless-stopped
    volumes:
      # Volume mounts from host system
      - "${MOVIE_DIRECTORY}:/movies"
      - "${TV1_DIRECTORY}:/tv1"
      - "${TV2_DIRECTORY}:/tv2"
      - "${TV3_DIRECTORY}:/tv3"
      # Persistent volumes
      - bazarr_backups:/config/backup
      - bazarr_content:/config

  # Indexer (Torrents + Usenet)
  prowlarr:
    image: linuxserver/prowlarr:1.2.2
    container_name: prowlarr
    hostname: prowlarr
    depends_on:
      - flaresolverr
      - lidarr
      - radarr
      - sonarr
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "512M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "9696:9696"
    restart: unless-stopped
    volumes:
      # Persistent volumes
      - prowlarr_backups:/config/Backups
      - prowlarr_content:/config

  ### DEPRECATED: WILL BE REMOVED
  transmission:
    image: linuxserver/transmission:4.0.1
    container_name: transmission
    hostname: transmission
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "512M"
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
      USER: "${ADMIN_USERNAME}"
      PASS: "${TRANSMISSION_PASSWORD}"
    networks:
      - home
    restart: unless-stopped
    volumes:
      # Volume mounts from host system
      - "${DOWNLOADS_DIRECTORY}:/downloads"
      # Persistent volumes
      - transmission_content:/config

  # Torrent downloader
  qbittorrent:
    image: linuxserver/qbittorrent:4.5.2-libtorrentv1
    container_name: qbittorrent
    hostname: qbittorrent
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TIMEZONE}"
      WEBUI_PORT: "9000"
    networks:
      - home
    ports:
      - "9000:9000"
      - "9001:9001"
      - "9001:9001/udp"
    restart: unless-stopped
    volumes:
      # Volume mounts from host system
      - "${DOWNLOADS_DIRECTORY}:/downloads"
      # Persistent volumes
      - qbittorrent_content:/config

  # Discord bot for requests
  doplarr:
    image: linuxserver/doplarr:3.6.2
    container_name: doplarr
    hostname: doplarr
    depends_on:
      - lidarr
      - radarr
      - sonarr
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
    environment:
      # Integration configuration
      RADARR__URL: "http://radarr:3000"
      SONARR__URL: "http://sonarr:3001"
      RADARR__API: "${RADARR_API_KEY}"
      SONARR__API: "${SONARR_API_KEY}"
      # Discord configuration
      DISCORD__TOKEN: "${DISCORD_BOT_TOKEN}"
      DISCORD__MAX_RESULTS: 5
    networks:
      - home
    restart: unless-stopped
    volumes:
      # Persistent volumes
      - doplarr_content:/config

  # Cloudflare rate-limiter solver
  flaresolverr:
    image: ghcr.io/aeonlucid/flaresolverr:latest
    container_name: flaresolverr
    hostname: flaresolverr
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1024M"
    environment:
      LOG_LEVEL: info
      TZ: "${TIMEZONE}"
    networks:
      - home
    ports:
      - "8191:8191"
    restart: unless-stopped

volumes:
  # Backups
  airsonic_backups: { }
  bazarr_backups: { }
  lidarr_backups: { }
  prowlarr_backups: { }
  radarr_backups: { }
  sonarr_backups: { }
  # Content
  airsonic_content: { }
  bazarr_content: { }
  calibre_content: { }
  calibre-web-1_content: { }
  calibre-web-2_content: { }
  doplarr_content: { }
  lidarr_content: { }
  prowlarr_content: { }
  radarr_content: { }
  sonarr_content: { }
  transmission_content: { }
  qbittorrent_content: { }
  # Calibre libraries for multiple users
  calibre_library_1: { }
  calibre_library_2: { }
